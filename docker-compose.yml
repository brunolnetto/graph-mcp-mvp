version: '3.8'

services:
  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15
    container_name: graph-mcp-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - graph-mcp-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: graph-mcp-app
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - APP_ENV=development
      - LOG_LEVEL=INFO
      - DEBUG=true
    volumes:
      - ./app:/app/app
      - ./tests:/app/tests
    networks:
      - graph-mcp-network
    depends_on:
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    command: ["uv", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Production App (commented out - uncomment for production)
  # app-prod:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     target: production
  #   container_name: graph-mcp-app-prod
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - NEO4J_URI=bolt://neo4j:7687
  #     - NEO4J_USER=neo4j
  #     - NEO4J_PASSWORD=password
  #     - APP_ENV=production
  #     - LOG_LEVEL=INFO
  #     - DEBUG=false
  #   networks:
  #     - graph-mcp-network
  #   depends_on:
  #     neo4j:
  #       condition: service_healthy
  #   restart: unless-stopped

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local

networks:
  graph-mcp-network:
    driver: bridge 